name: "Terraform Infrastructure Change Management Pipeline with GitHub Actions"

on:
  # schedule:
  #   - cron: '55 14 * * *'
  push:
    branches:
      - main
      - dev
      - step-function
  pull_request:
    branches:
      - main
      - dev
  workflow_dispatch:

env:
  ENV_FILE: .config/.env.${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
  # verbosity setting for Terraform logs
  TF_LOG: INFO
  # Credentials for deployment to AWS
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  # Deploying AWS infrastructure
  aws_terraform:
    name: "AWS Infrastructure Change"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./aws

    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v2

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0

      #Terraform initialisation 
      - name: Load environment variables
        id: load-vars
        run: source $ENV_FILE && echo "Loaded $ENV_FILE"

      - name: Terraform init
        id: init
        env:
          BUCKET_TF_STATE: ${{ env.BUCKET_TF_STATE }}
          KEY_TF_STATE: ${{ env.KEY_TF_STATE }}
        run: terraform init  -backend-config="region=eu-west-1" -backend-config="bucket=$BUCKET_TF_STATE" -backend-config="key=$KEY_TF_STATE"
      
      - name: Terraform format
        id: fmt
        run: terraform fmt -check
      
      - name: Terraform validate
        id: validate
        run: terraform validate

      #Terraform planning
      - name: Terraform planning
        id: plan
        run: terraform plan -out aws_planfile
        continue-on-error: false    

      #Manual approval before applying plan if not by scheduler
      - if: github.event_name != 'schedule'
        name: Manual approval
        id: approve
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{secrets.ISSUE_WRITING_TOKEN}}
          approvers: NAPondu, Aradjin
          minimum-approvals: 1
          issue-title: "Deploying new terraform plan for AWS infrastructure"
          issue-body: "Please approve or deny the terraform deployment plan"
          exclude-workflow-initiator-as-approver: false

      #Export planfile
      - name: Export planfile
        id: export
        uses: actions/upload-artifact@v4
        with:
          path: aws/aws_planfile
          name: aws_planfile

      #Terraform applying
      - name: Terraform applying
        id: apply
        run: terraform apply aws_planfile


  # Deploying Snowflake infrastructure
  snowflake_terraform:
    name: "Snowflake Infrastructure Change"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./snowflake
    needs: aws_terraform

    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v2

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0

      #Terraform initialisation 
      - name: Load environment variables
        id: load-vars
        run: source $ENV_FILE && echo "Loaded $ENV_FILE"

      - name: Terraform init
        id: init
        env:
          BUCKET_TF_STATE: ${{ env.BUCKET_TF_STATE }}
          KEY_TF_STATE: ${{ env.KEY_TF_STATE }}
        run: terraform init  -backend-config="region=eu-west-1" -backend-config="bucket=$BUCKET_TF_STATE" -backend-config="key=$KEY_TF_STATE"
      
      - name: Terraform format
        id: fmt
        run: terraform fmt -check
      
      - name: Terraform validate
        id: validate
        run: terraform validate

      #Terraform planning
      - name: Terraform planning
        id: plan
        run: terraform plan -out snowflake_planfile
        continue-on-error: false    
        env:
          TF_VAR_snowflake_private_key: ${{ secrets.SNOWFLAKE_PRIVATE_KEY }}

      #Manual approval before applying plan if not by scheduler
      - if: github.event_name != 'schedule'
        name: Manual approval
        id: approve
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{secrets.ISSUE_WRITING_TOKEN}}
          approvers: NAPondu, Aradjin
          minimum-approvals: 1
          issue-title: "Deploying new terraform plan for Snowflake infrastructure"
          issue-body: "Please approve or deny the terraform deployment plan"
          exclude-workflow-initiator-as-approver: false

      #Export planfile
      - name: Export planfile
        id: export
        uses: actions/upload-artifact@v4
        with:
          path: snowflake/snowflake_planfile
          name: snowflake_planfile

      #Terraform applying
      - name: Terraform applying
        id: apply
        run: terraform apply snowflake_planfile
        env:
          TF_VAR_snowflake_private_key: ${{ secrets.SNOWFLAKE_PRIVATE_KEY }}
