name: "Terraform Infrastructure Change Management Pipeline with GitHub Actions"

on:
 push:
   branches:
   - main
   - dev
 pull_request:
   branches:
   - main
   - dev

env:
 ENV_FILE: .config/.env.${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
 # verbosity setting for Terraform logs
 TF_LOG: INFO
 # Credentials for deployment to AWS
 AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
 AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
 terraform:
   name: "Terraform Infrastructure Change Management"
   runs-on: ubuntu-latest
   defaults:
     run:
       shell: bash
       # We keep Terraform files in the terraform directory.
       working-directory: ./terraform
 
   steps:
     - name: Checkout the repository to the runner
       uses: actions/checkout@v2
 
     - name: Setup Terraform with specified version on the runner
       uses: hashicorp/setup-terraform@v2
       with:
         terraform_version: 1.3.0



    #Terraform initialisation 
     - name: Load environment variables
       id: load-vars
       run: source $ENV_FILE && echo "Loaded $ENV_FILE"

     - name: Terraform init
       id: init
       env:
        BUCKET_TF_STATE: ${{ env.BUCKET_TF_STATE }}
        KEY_TF_STATE: ${{ env.KEY_TF_STATE }}
       run: terraform init  -backend-config="region=eu-west-1" -backend-config="bucket=$BUCKET_TF_STATE" -backend-config="key=$KEY_TF_STATE"
     
     - name: Terraform format
       id: fmt
       run: terraform fmt -check
    
     - name: Terraform validate
       id: validate
       run: terraform validate

    #Terraform planning
     - name: Terraform planning
       id: plan
       run: terraform plan -out planfile
       continue-on-error: false

    #Terraform applying
    #  - name: Terraform applying
    #    id: apply
    #    run: terraform apply planfile